# use C-a, since it's on the home row and easier to hit than C-b
set-option -g prefix C-a
unbind-key C-a
bind-key C-a send-prefix

set -g base-index 1
set -g status on
set -g set-titles on
set -g default-terminal "screen-256color"
set -sg escape-time 0
set-option -g set-titles-string '#{pane_current_command}'
set-option -g history-limit 10000
set-option -g visual-activity off
set-option -g status-position bottom
set-option -g renumber-windows on
set-window-option -g xterm-keys on
set-window-option -g display-panes-time 1500
set -g escape-time 10
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# Easy config reload
bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# Act like Vim
set-window-option -g mode-keys vi
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# vi is good
setw -g mode-keys vi
set -g status-keys vi

if-shell 'test "$(uname -s)" = "Darwin"' 'bind-key y run-shell "tmux show-buffer | pbcopy" \; display-message "Copied tmux buffer to system clipboard"'
if-shell 'test "$(uname -s)" = "Linux"' 'bind-key y run-shell "tmux show-buffer | xclip -sel clip -i" \; display-message "Copied tmux buffer to system clipboard"'

bind-key : command-prompt
bind-key r refresh-client
bind-key L clear-history
bind-key space next-window
bind-key bspace previous-window
bind-key enter next-layout

# use different keys to split vertical and horizonal
bind | split-window -h
bind - split-window -v

# use vim-like keys for splits and windows
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"

bind-key u capture-pane \; save-buffer /tmp/tmux-buffer \; new-window -n "urlview" '$SHELL -c "urlview < /tmp/tmux-buffer"'

bind C-l send-keys 'C-l'
bind-key C-o rotate-window
set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80
bind-key a last-pane
bind-key q display-panes
bind-key [ copy-mode
bind-key ] paste-buffer

# Split
set-option -g pane-active-border-fg black
set-option -g pane-active-border-bg colour236
set-option -g pane-border-fg black
set-option -g pane-border-bg colour236

# Status
set -g status-interval 2
set -g status-left ''
set -g status-right '#($TMUX_PLUGIN_MANAGER_PATH/tmux-mem-cpu-load/tmux-mem-cpu-load --colors --interval 2) #[fg=colour176,bold,bg=colour236,bold] %B #[fg=colour146,bold,bg=colour236,bold]%d, #[fg=colour173,bold,bg=colour236,bold]%Y#[fg=default] #[fg=colour234,bold,bg=colour12,bold] %R '
set -g status-right-length 100
set -g status-bg default
setw -g window-status-format '#[fg=#{?window_activity_flag,red,colour236},bg=colour180] #I #[fg=colour180,bg=colour236] #W '
setw -g window-status-current-format '#[fg=colour12,bold,bg=colour236,bold] #I #[fg=colour236,bold,bg=colour12,bold] #W '

# message theme
set -g message-bg black
set -g message-command-fg red
set -g message-command-bg brightblack

# Enable native Mac OS X copy/paste
set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

# disable mouse control by default - change 'off' to 'on' to enable by default.
setw -g mouse off

# toggle mouse mode to allow mouse copy/paste
# set mouse on with prefix m
bind m \
    set -g mouse on \;\
    display 'Mouse: ON'
# set mouse off with prefix M
bind M \
    set -g mouse off \;\
    display 'Mouse: OFF'
# zoom this pane to full screen
bind + \
    new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \;\
    swap-pane -s tmux-zoom.0 \;\
    select-window -t tmux-zoom
# restore this pane
bind - \
    last-window \;\
    swap-pane -s tmux-zoom.0 \;\
    kill-window -t tmux-zoom

set -g @tpm_plugins '               \
    tmux-plugins/tpm                \
    tmux-plugins/tmux-sensible      \
    tmux-plugins/tmux-yank          \
    tmux-plugins/tmux-copycat       \
    thewtex/tmux-mem-cpu-load       \
'

run-shell '~/.tmux/plugins/tpm/tpm'
